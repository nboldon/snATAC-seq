## Differential Gene Accessibility between samples by cluster

## Differential Gene Accessibility between samples by cluster

# Alternate Protocol: When performing differential gene score analysis in ArchR, using groupBy = "Sample" directly compares all cells from one sample against all cells from other samples, pooling together the heterogeneous cell populations present in each sample. 



# Get the current sample names
sample <- projP_3$Sample

# Rename samples to simpler names
sample <- gsub("cortex_fresh_v1", "sample1", sample)
sample <- gsub("cortex_v1-1_chromx", "sample2", sample)
sample <- gsub("cortex_v2_chromx", "sample3", sample)
sample <- gsub("cortex_v2_cont", "sample4", sample)

# Check the renaming worked
unique(sample)

# Add to the project
projP_3$sample <- sample

# Verify it's there
table(projP_3$sample)

#####################################################
# Pairwise comparisons between samples
#####################################################

# Sample1 vs Sample2
markerTest_s1s2 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample1",
  bgdGroups = "sample2"
)

markerList_s1s2 <- getMarkers(markerTest_s1s2, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s1s2$sample1, file = "sample1_vs_sample2_markers.csv", row.names = TRUE)

# Sample1 vs Sample3
markerTest_s1s3 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample1",
  bgdGroups = "sample3"
)

markerList_s1s3 <- getMarkers(markerTest_s1s3, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s1s3$sample1, file = "sample1_vs_sample3_markers.csv", row.names = TRUE)

# Sample1 vs Sample4
markerTest_s1s4 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample1",
  bgdGroups = "sample4"
)

markerList_s1s4 <- getMarkers(markerTest_s1s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s1s4$sample1, file = "sample1_vs_sample4_markers.csv", row.names = TRUE)

# Sample2 vs Sample3
markerTest_s2s3 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample2",
  bgdGroups = "sample3"
)

markerList_s2s3 <- getMarkers(markerTest_s2s3, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s2s3$sample2, file = "sample2_vs_sample3_markers.csv", row.names = TRUE)

# Sample2 vs Sample4
markerTest_s2s4 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample2",
  bgdGroups = "sample4"
)

markerList_s2s4 <- getMarkers(markerTest_s2s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s2s4$sample2, file = "sample2_vs_sample4_markers.csv", row.names = TRUE)

# Sample3 vs Sample4
markerTest_s3s4 <- getMarkerFeatures(
  ArchRProj = projP_3,
  useMatrix = "GeneScoreMatrix",
  groupBy = "sample",
  testMethod = "wilcoxon",
  bias = c("TSSEnrichment", "log10(nFrags)"),
  useGroups = "sample3",
  bgdGroups = "sample4"
)

markerList_s3s4 <- getMarkers(markerTest_s3s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
write.csv(markerList_s3s4$sample3, file = "sample3_vs_sample4_markers.csv", row.names = TRUE)


#####################################################
#####################################################


## Provides .csv files that includes cluster-specific pairwise comparisons


# Get the current sample names
sample <- projP_3$Sample

# Rename samples to simpler names
sample <- gsub("cortex_fresh_v1", "sample1", sample)
sample <- gsub("cortex_v1-1_chromx", "sample2", sample)
sample <- gsub("cortex_v2_chromx", "sample3", sample)
sample <- gsub("cortex_v2_cont", "sample4", sample)

# Check the renaming worked
unique(sample)

# Add to the project
projP_3$sample <- sample

# Verify it's there
table(projP_3$sample)

# Create a combined sample_cluster identifier
projP_3$sample_cluster <- paste0(projP_3$sample, "_", projP_3$Clusters)

# Check what combinations exist
table(projP_3$sample_cluster)

# Get all unique clusters
all_clusters <- unique(projP_3$Clusters)
print(all_clusters)

#####################################################
# Helper function to find common clusters between two samples
#####################################################
get_common_clusters <- function(sample1_name, sample2_name) {
  sample1_combinations <- unique(projP_3$sample_cluster[projP_3$sample == sample1_name])
  sample2_combinations <- unique(projP_3$sample_cluster[projP_3$sample == sample2_name])
  
  # Extract cluster names
  sample1_clusters <- gsub(paste0(sample1_name, "_"), "", sample1_combinations)
  sample2_clusters <- gsub(paste0(sample2_name, "_"), "", sample2_combinations)
  
  # Find common clusters
  common <- intersect(sample1_clusters, sample2_clusters)
  return(common)
}

#####################################################
# Sample1 vs Sample2 - by cluster
#####################################################

common_clusters_s1s2 <- get_common_clusters("sample1", "sample2")
print(paste("Common clusters between sample1 and sample2:", paste(common_clusters_s1s2, collapse=", ")))

if(length(common_clusters_s1s2) > 0) {
  markerTest_s1s2 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample1_", common_clusters_s1s2),
    bgdGroups = paste0("sample2_", common_clusters_s1s2)
  )
  
  markerList_s1s2 <- getMarkers(markerTest_s1s2, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s1s2) {
    cluster_name <- paste0("sample1_", cluster)
    if(cluster_name %in% names(markerList_s1s2)) {
      cluster_markers <- markerList_s1s2[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample1_vs_sample2_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample1 vs Sample2,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}


#####################################################
# Sample1 vs Sample3 - by cluster
#####################################################

common_clusters_s1s3 <- get_common_clusters("sample1", "sample3")
print(paste("Common clusters between sample1 and sample3:", paste(common_clusters_s1s3, collapse=", ")))

if(length(common_clusters_s1s3) > 0) {
  markerTest_s1s3 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample1_", common_clusters_s1s3),
    bgdGroups = paste0("sample3_", common_clusters_s1s3)
  )
  
  markerList_s1s3 <- getMarkers(markerTest_s1s3, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s1s3) {
    cluster_name <- paste0("sample1_", cluster)
    if(cluster_name %in% names(markerList_s1s3)) {
      cluster_markers <- markerList_s1s3[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample1_vs_sample3_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample1 vs Sample3,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}

#####################################################
# Sample1 vs Sample4 - by cluster
#####################################################

common_clusters_s1s4 <- get_common_clusters("sample1", "sample4")
print(paste("Common clusters between sample1 and sample4:", paste(common_clusters_s1s4, collapse=", ")))

if(length(common_clusters_s1s4) > 0) {
  markerTest_s1s4 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample1_", common_clusters_s1s4),
    bgdGroups = paste0("sample4_", common_clusters_s1s4)
  )
  
  markerList_s1s4 <- getMarkers(markerTest_s1s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s1s4) {
    cluster_name <- paste0("sample1_", cluster)
    if(cluster_name %in% names(markerList_s1s4)) {
      cluster_markers <- markerList_s1s4[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample1_vs_sample4_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample1 vs Sample4,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}

#####################################################
# Sample2 vs Sample3 - by cluster
#####################################################

common_clusters_s2s3 <- get_common_clusters("sample2", "sample3")
print(paste("Common clusters between sample2 and sample3:", paste(common_clusters_s2s3, collapse=", ")))

if(length(common_clusters_s2s3) > 0) {
  markerTest_s2s3 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample2_", common_clusters_s2s3),
    bgdGroups = paste0("sample3_", common_clusters_s2s3)
  )
  
  markerList_s2s3 <- getMarkers(markerTest_s2s3, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s2s3) {
    cluster_name <- paste0("sample2_", cluster)
    if(cluster_name %in% names(markerList_s2s3)) {
      cluster_markers <- markerList_s2s3[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample2_vs_sample3_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample2 vs Sample3,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}

#####################################################
# Sample2 vs Sample4 - by cluster
#####################################################

common_clusters_s2s4 <- get_common_clusters("sample2", "sample4")
print(paste("Common clusters between sample2 and sample4:", paste(common_clusters_s2s4, collapse=", ")))

if(length(common_clusters_s2s4) > 0) {
  markerTest_s2s4 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample2_", common_clusters_s2s4),
    bgdGroups = paste0("sample4_", common_clusters_s2s4)
  )
  
  markerList_s2s4 <- getMarkers(markerTest_s2s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s2s4) {
    cluster_name <- paste0("sample2_", cluster)
    if(cluster_name %in% names(markerList_s2s4)) {
      cluster_markers <- markerList_s2s4[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample2_vs_sample4_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample2 vs Sample4,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}

#####################################################
# Sample3 vs Sample4 - by cluster
#####################################################

common_clusters_s3s4 <- get_common_clusters("sample3", "sample4")
print(paste("Common clusters between sample3 and sample4:", paste(common_clusters_s3s4, collapse=", ")))

if(length(common_clusters_s3s4) > 0) {
  markerTest_s3s4 <- getMarkerFeatures(
    ArchRProj = projP_3,
    useMatrix = "GeneScoreMatrix",
    groupBy = "sample_cluster",
    testMethod = "wilcoxon",
    bias = c("TSSEnrichment", "log10(nFrags)"),
    useGroups = paste0("sample3_", common_clusters_s3s4),
    bgdGroups = paste0("sample4_", common_clusters_s3s4)
  )
  
  markerList_s3s4 <- getMarkers(markerTest_s3s4, cutOff = "FDR <= 0.01 & abs(Log2FC) >= 1.25")
  
  for(cluster in common_clusters_s3s4) {
    cluster_name <- paste0("sample3_", cluster)
    if(cluster_name %in% names(markerList_s3s4)) {
      cluster_markers <- markerList_s3s4[[cluster_name]]
      if(nrow(cluster_markers) > 0) {
        write.csv(cluster_markers, 
                  file = paste0("sample3_vs_sample4_", cluster, "_markers.csv"), 
                  row.names = TRUE)
        print(paste("Sample3 vs Sample4,", cluster, "- markers:", nrow(cluster_markers)))
      }
    }
  }
}


#####################################################


## Combine results by cluster to compare pairwise comparison results


# Get all unique clusters
all_clusters <- unique(projP_3$Clusters)

# Loop through each cluster and combine all pairwise comparisons for that cluster
for(cluster in all_clusters) {
  
  print(paste("Combining data for", cluster))
  
  # List to store dataframes
  cluster_data_list <- list()
  
  # Sample1 vs Sample2
  file_s1s2 <- paste0("sample1_vs_sample2_", cluster, "_markers.csv")
  if(file.exists(file_s1s2)) {
    df_s1s2 <- read.csv(file_s1s2, row.names = 1)
    df_s1s2$Comparison <- "sample1_vs_sample2"
    cluster_data_list[["s1s2"]] <- df_s1s2
  }
  
  # Sample1 vs Sample3
  file_s1s3 <- paste0("sample1_vs_sample3_", cluster, "_markers.csv")
  if(file.exists(file_s1s3)) {
    df_s1s3 <- read.csv(file_s1s3, row.names = 1)
    df_s1s3$Comparison <- "sample1_vs_sample3"
    cluster_data_list[["s1s3"]] <- df_s1s3
  }
  
  # Sample1 vs Sample4
  file_s1s4 <- paste0("sample1_vs_sample4_", cluster, "_markers.csv")
  if(file.exists(file_s1s4)) {
    df_s1s4 <- read.csv(file_s1s4, row.names = 1)
    df_s1s4$Comparison <- "sample1_vs_sample4"
    cluster_data_list[["s1s4"]] <- df_s1s4
  }
  
  # Sample2 vs Sample3
  file_s2s3 <- paste0("sample2_vs_sample3_", cluster, "_markers.csv")
  if(file.exists(file_s2s3)) {
    df_s2s3 <- read.csv(file_s2s3, row.names = 1)
    df_s2s3$Comparison <- "sample2_vs_sample3"
    cluster_data_list[["s2s3"]] <- df_s2s3
  }
  
  # Sample2 vs Sample4
  file_s2s4 <- paste0("sample2_vs_sample4_", cluster, "_markers.csv")
  if(file.exists(file_s2s4)) {
    df_s2s4 <- read.csv(file_s2s4, row.names = 1)
    df_s2s4$Comparison <- "sample2_vs_sample4"
    cluster_data_list[["s2s4"]] <- df_s2s4
  }
  
  # Sample3 vs Sample4
  file_s3s4 <- paste0("sample3_vs_sample4_", cluster, "_markers.csv")
  if(file.exists(file_s3s4)) {
    df_s3s4 <- read.csv(file_s3s4, row.names = 1)
    df_s3s4$Comparison <- "sample3_vs_sample4"
    cluster_data_list[["s3s4"]] <- df_s3s4
  }
  
  # Combine all dataframes for this cluster
  if(length(cluster_data_list) > 0) {
    combined_df <- do.call(rbind, cluster_data_list)
    
    # Save combined file
    write.csv(combined_df, 
              file = paste0(cluster, "_all_comparisons_combined.csv"), 
              row.names = TRUE)
    
    print(paste("  Combined", length(cluster_data_list), "comparisons with", 
                nrow(combined_df), "total markers"))
  } else {
    print(paste("  No comparison files found for", cluster))
  }
}

print("Done combining all clusters!")
